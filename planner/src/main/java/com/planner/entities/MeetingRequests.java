package com.planner.entities;

// default package
// Generated Mar 10, 2018 12:35:08 AM by Hibernate Tools 5.2.3.Final

import java.sql.Time;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * MeetingRequests generated by hbm2java
 */
@Entity
@Table(name = "meeting_requests", catalog = "planner")
public class MeetingRequests implements java.io.Serializable {

    private int id;
    private Room room;
    private String description;
    private Date startDate;
    private Date endDate;
    private Date startTime;
    private Date endTime;
    private int duration;
    private int priority;
    private String status;
    private char isFlexible;
    private char canOverride;
    private char isConfidential;
    private char isRepetative;
    private Set<Employee> employees = new HashSet<Employee>(0);

    public MeetingRequests() {
    }

    public MeetingRequests(int id, String description, Date startDate, Date endDate, Date startTime, Date endTime,
                           int duration, int priority, String status, char isFlexible, char isConfidential, char isRepetative) {
        this.id = id;
        this.description = description;
        this.startDate = startDate;
        this.endDate = endDate;
        this.startTime = startTime;
        this.endTime = endTime;
        this.duration = duration;
        this.priority = priority;
        this.status = status;
        this.isFlexible = isFlexible;
        this.isConfidential = isConfidential;
        this.isRepetative = isRepetative;
    }

    public MeetingRequests(int id, Room room, String description, Date startDate, Date endDate, Date startTime,
                           Date endTime, int duration, int priority, String status, char isFlexible, char canOverride,
                           char isConfidential, char isRepetative, Set<Employee> employees) {
        this.id = id;
        this.room = room;
        this.description = description;
        this.startDate = startDate;
        this.endDate = endDate;
        this.startTime = startTime;
        this.endTime = endTime;
        this.duration = duration;
        this.priority = priority;
        this.status = status;
        this.isFlexible = isFlexible;
        this.canOverride = canOverride;
        this.isConfidential = isConfidential;
        this.isRepetative = isRepetative;
        this.employees = employees;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "roomId")
    public Room getRoom() {
        return this.room;
    }

    public void setRoom(Room room) {
        this.room = room;
    }

    @Column(name = "description", nullable = false, length = 145)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "startDate", nullable = false, length = 10)
    public Date getStartDate() {
        return this.startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "endDate", nullable = false, length = 10)
    public Date getEndDate() {
        return this.endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "startTime", nullable = false, length = 8)
    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "endTime", nullable = false, length = 8)
    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    @Column(name = "duration", nullable = false)
    public int getDuration() {
        return this.duration;
    }

    public void setDuration(int duration) {
        this.duration = duration;
    }

    @Column(name = "priority", nullable = false)
    public int getPriority() {
        return this.priority;
    }

    public void setPriority(int priority) {
        this.priority = priority;
    }

    @Column(name = "status", nullable = false, length = 15)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Column(name = "isFlexible", nullable = false, length = 1)
    public char getIsFlexible() {
        return this.isFlexible;
    }

    public void setIsFlexible(char isFlexible) {
        this.isFlexible = isFlexible;
    }

    @Column(name = "canOverride", length = 1)
    public char getCanOverride() {
        return this.canOverride;
    }

    public void setCanOverride(char canOverride) {
        this.canOverride = canOverride;
    }

    @Column(name = "isConfidential", nullable = false, length = 1)
    public char getIsConfidential() {
        return this.isConfidential;
    }

    public void setIsConfidential(char isConfidential) {
        this.isConfidential = isConfidential;
    }

    @Column(name = "isRepetative", nullable = false, length = 1)
    public char getIsRepetative() {
        return this.isRepetative;
    }

    public void setIsRepetative(char isRepetative) {
        this.isRepetative = isRepetative;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "meeting_req_mem", catalog = "planner", joinColumns = {
            @JoinColumn(name = "meetingReqId", nullable = false, updatable = false) }, inverseJoinColumns = {
            @JoinColumn(name = "employeeId", nullable = false, updatable = false) })
    public Set<Employee> getEmployees() {
        return this.employees;
    }

    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }

}